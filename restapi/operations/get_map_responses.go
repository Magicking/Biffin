package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/Magicking/Biffin/models"
)

/*GetMapOK An array of MapFile2

swagger:response getMapOK
*/
type GetMapOK struct {

	/*
	  In: Body
	*/
	Payload []*models.MapFile2 `json:"body,omitempty"`
}

// NewGetMapOK creates GetMapOK with default headers values
func NewGetMapOK() *GetMapOK {
	return &GetMapOK{}
}

// WithPayload adds the payload to the get map o k response
func (o *GetMapOK) WithPayload(payload []*models.MapFile2) *GetMapOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get map o k response
func (o *GetMapOK) SetPayload(payload []*models.MapFile2) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMapOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.MapFile2, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetMapDefault Unexpected error

swagger:response getMapDefault
*/
type GetMapDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetMapDefault creates GetMapDefault with default headers values
func NewGetMapDefault(code int) *GetMapDefault {
	if code <= 0 {
		code = 500
	}

	return &GetMapDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get map default response
func (o *GetMapDefault) WithStatusCode(code int) *GetMapDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get map default response
func (o *GetMapDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get map default response
func (o *GetMapDefault) WithPayload(payload *models.Error) *GetMapDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get map default response
func (o *GetMapDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetMapDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
