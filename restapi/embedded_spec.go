// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Biffin API",
    "title": "Biffin API",
    "version": "1.0.0"
  },
  "paths": {
    "/map": {
      "get": {
        "description": "The MapFile endpoint returns all available maps",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "The id of the MapFile to return",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of MapFile2",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MapFile2"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Create the new map, return the associated id, an error othewise\n",
        "summary": "Create a new map",
        "parameters": [
          {
            "description": "The new map yet to be created",
            "name": "map_file",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapFile2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the new map",
            "schema": {
              "type": "integer"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BaseUnit": {
      "type": "object",
      "properties": {
        "index": {
          "description": "Index",
          "type": "integer"
        },
        "x": {
          "description": "X position",
          "type": "integer"
        },
        "y": {
          "description": "Y position",
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GameUnit": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of unit",
          "type": "string"
        },
        "x": {
          "description": "X position",
          "type": "integer"
        },
        "y": {
          "description": "Y position",
          "type": "integer"
        }
      }
    },
    "Layer": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Array of GIDs. tilelayer only.",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "draworder": {
          "description": "topdown (default) or index. objectgroup only.",
          "type": "string"
        },
        "height": {
          "description": "Row count. Same as map height in Tiled Qt.",
          "type": "integer"
        },
        "name": {
          "description": "Name assigned to this layer",
          "type": "string"
        },
        "objects": {
          "description": "Array of Object units. objectgroup only.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectUnit"
          }
        },
        "opacity": {
          "description": "Value between 0 and 1",
          "type": "number"
        },
        "properties": {
          "description": "string key-value pairs.",
          "type": "object"
        },
        "type": {
          "description": "tilelayer, objectgroup, or imagelayer",
          "type": "string"
        },
        "visible": {
          "description": "Whether layer is shown or hidden in editor",
          "type": "boolean"
        },
        "width": {
          "description": "Column count. Same as map width in Tiled Qt.",
          "type": "integer"
        },
        "x": {
          "description": "Horizontal layer offset. Always 0 in Tiled Qt.",
          "type": "integer"
        },
        "y": {
          "description": "Vertical layer offset. Always 0 in Tiled Qt.",
          "type": "integer"
        }
      }
    },
    "MapFile": {
      "type": "object",
      "properties": {
        "backgroundcolor": {
          "description": "Hex-formatted color (#RRGGBB) (Optional)",
          "type": "string"
        },
        "height": {
          "description": "Number of tile rows",
          "type": "integer"
        },
        "layers": {
          "description": "Array of Layers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Layer"
          }
        },
        "nextobjectid": {
          "description": "Auto-increments for each placed object",
          "type": "integer"
        },
        "orientation": {
          "description": "Orthogonal, isometric, or staggered",
          "type": "string"
        },
        "properties": {
          "description": "String key-value pairs",
          "type": "object"
        },
        "renderorder": {
          "description": "Rendering direction (orthogonal maps only)",
          "type": "string"
        },
        "tileheight": {
          "description": "Map grid height.",
          "type": "integer"
        },
        "tilesets": {
          "description": "Array of Tilesets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tileset"
          }
        },
        "tilewidth": {
          "description": "Map grid width.",
          "type": "integer"
        },
        "width": {
          "description": "Number of tile columns",
          "type": "integer"
        }
      }
    },
    "MapFile2": {
      "type": "object",
      "properties": {
        "BuildingLayer": {
          "description": "Building elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseUnit"
          }
        },
        "ObjectLayer": {
          "description": "Object elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseUnit"
          }
        },
        "TerrainLayer": {
          "description": "Terrain units",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseUnit"
          }
        },
        "height": {
          "description": "Height in pixels. Ignored if using a gid.",
          "type": "integer"
        },
        "units": {
          "description": "Units of the game",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameUnit"
          }
        },
        "width": {
          "description": "Width in pixels. Ignored if using a gid.",
          "type": "integer"
        }
      }
    },
    "ObjectUnit": {
      "type": "object",
      "properties": {
        "gid": {
          "description": "GID, only if object comes from a Tilemap",
          "type": "integer"
        },
        "height": {
          "description": "Height in pixels. Ignored if using a gid.",
          "type": "integer"
        },
        "id": {
          "description": "Incremental id - unique across all objects",
          "type": "integer"
        },
        "name": {
          "description": "String assigned to name field in editor",
          "type": "string"
        },
        "properties": {
          "description": "String key-value pairs",
          "type": "object"
        },
        "rotation": {
          "description": "Angle in degrees clockwise",
          "type": "number"
        },
        "type": {
          "description": "String assigned to type field in editor",
          "type": "string"
        },
        "visible": {
          "description": "Whether object is shown in editor.",
          "type": "boolean"
        },
        "width": {
          "description": "Width in pixels. Ignored if using a gid.",
          "type": "integer"
        },
        "x": {
          "description": "x coordinate in pixels",
          "type": "integer"
        },
        "y": {
          "description": "y coordinate in pixels",
          "type": "integer"
        }
      }
    },
    "Terrain": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of terrain",
          "type": "string"
        },
        "tile": {
          "description": "Local ID of tile representing terrain",
          "type": "integer"
        }
      }
    },
    "Tiles": {
      "type": "object",
      "properties": {
        "terrain": {
          "description": "index of terrain for each corner of tile",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "Tileset": {
      "type": "object",
      "properties": {
        "firstgid": {
          "description": "GID corresponding to the first tile in the set",
          "type": "integer"
        },
        "image": {
          "description": "Image used for tiles in this set",
          "type": "string"
        },
        "imageheight": {
          "description": "Height of source image in pixels",
          "type": "integer"
        },
        "imagewidth": {
          "description": "Width of source image in pixels",
          "type": "integer"
        },
        "margin": {
          "description": "Buffer between image edge and first tile (pixels)",
          "type": "integer"
        },
        "name": {
          "description": "Name given to this tileset",
          "type": "string"
        },
        "properties": {
          "description": "String key-value pairs",
          "type": "object"
        },
        "spacing": {
          "description": "Spacing between adjacent tiles in image (pixels)",
          "type": "integer"
        },
        "terrains": {
          "description": "Array of Terrains (optional)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tileset"
          }
        },
        "tileheight": {
          "description": "Maximum height of tiles in this set",
          "type": "integer"
        },
        "tileproperties": {
          "description": "Per-tile properties, indexed by gid as string",
          "type": "object"
        },
        "tiles": {
          "description": "Gid-indexed Tiles (optional)",
          "type": "object"
        },
        "tilewidth": {
          "description": "Maximum width of tiles in this set",
          "type": "integer"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Biffin API",
    "title": "Biffin API",
    "version": "1.0.0"
  },
  "paths": {
    "/map": {
      "get": {
        "description": "The MapFile endpoint returns all available maps",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "description": "The id of the MapFile to return",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of MapFile2",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MapFile2"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "Create the new map, return the associated id, an error othewise\n",
        "summary": "Create a new map",
        "parameters": [
          {
            "description": "The new map yet to be created",
            "name": "map_file",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MapFile2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the new map",
            "schema": {
              "type": "integer"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BaseUnit": {
      "type": "object",
      "properties": {
        "index": {
          "description": "Index",
          "type": "integer"
        },
        "x": {
          "description": "X position",
          "type": "integer"
        },
        "y": {
          "description": "Y position",
          "type": "integer"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "GameUnit": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of unit",
          "type": "string"
        },
        "x": {
          "description": "X position",
          "type": "integer"
        },
        "y": {
          "description": "Y position",
          "type": "integer"
        }
      }
    },
    "Layer": {
      "type": "object",
      "properties": {
        "data": {
          "description": "Array of GIDs. tilelayer only.",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "draworder": {
          "description": "topdown (default) or index. objectgroup only.",
          "type": "string"
        },
        "height": {
          "description": "Row count. Same as map height in Tiled Qt.",
          "type": "integer"
        },
        "name": {
          "description": "Name assigned to this layer",
          "type": "string"
        },
        "objects": {
          "description": "Array of Object units. objectgroup only.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectUnit"
          }
        },
        "opacity": {
          "description": "Value between 0 and 1",
          "type": "number"
        },
        "properties": {
          "description": "string key-value pairs.",
          "type": "object"
        },
        "type": {
          "description": "tilelayer, objectgroup, or imagelayer",
          "type": "string"
        },
        "visible": {
          "description": "Whether layer is shown or hidden in editor",
          "type": "boolean"
        },
        "width": {
          "description": "Column count. Same as map width in Tiled Qt.",
          "type": "integer"
        },
        "x": {
          "description": "Horizontal layer offset. Always 0 in Tiled Qt.",
          "type": "integer"
        },
        "y": {
          "description": "Vertical layer offset. Always 0 in Tiled Qt.",
          "type": "integer"
        }
      }
    },
    "MapFile": {
      "type": "object",
      "properties": {
        "backgroundcolor": {
          "description": "Hex-formatted color (#RRGGBB) (Optional)",
          "type": "string"
        },
        "height": {
          "description": "Number of tile rows",
          "type": "integer"
        },
        "layers": {
          "description": "Array of Layers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Layer"
          }
        },
        "nextobjectid": {
          "description": "Auto-increments for each placed object",
          "type": "integer"
        },
        "orientation": {
          "description": "Orthogonal, isometric, or staggered",
          "type": "string"
        },
        "properties": {
          "description": "String key-value pairs",
          "type": "object"
        },
        "renderorder": {
          "description": "Rendering direction (orthogonal maps only)",
          "type": "string"
        },
        "tileheight": {
          "description": "Map grid height.",
          "type": "integer"
        },
        "tilesets": {
          "description": "Array of Tilesets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tileset"
          }
        },
        "tilewidth": {
          "description": "Map grid width.",
          "type": "integer"
        },
        "width": {
          "description": "Number of tile columns",
          "type": "integer"
        }
      }
    },
    "MapFile2": {
      "type": "object",
      "properties": {
        "BuildingLayer": {
          "description": "Building elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseUnit"
          }
        },
        "ObjectLayer": {
          "description": "Object elements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseUnit"
          }
        },
        "TerrainLayer": {
          "description": "Terrain units",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseUnit"
          }
        },
        "height": {
          "description": "Height in pixels. Ignored if using a gid.",
          "type": "integer"
        },
        "units": {
          "description": "Units of the game",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GameUnit"
          }
        },
        "width": {
          "description": "Width in pixels. Ignored if using a gid.",
          "type": "integer"
        }
      }
    },
    "ObjectUnit": {
      "type": "object",
      "properties": {
        "gid": {
          "description": "GID, only if object comes from a Tilemap",
          "type": "integer"
        },
        "height": {
          "description": "Height in pixels. Ignored if using a gid.",
          "type": "integer"
        },
        "id": {
          "description": "Incremental id - unique across all objects",
          "type": "integer"
        },
        "name": {
          "description": "String assigned to name field in editor",
          "type": "string"
        },
        "properties": {
          "description": "String key-value pairs",
          "type": "object"
        },
        "rotation": {
          "description": "Angle in degrees clockwise",
          "type": "number"
        },
        "type": {
          "description": "String assigned to type field in editor",
          "type": "string"
        },
        "visible": {
          "description": "Whether object is shown in editor.",
          "type": "boolean"
        },
        "width": {
          "description": "Width in pixels. Ignored if using a gid.",
          "type": "integer"
        },
        "x": {
          "description": "x coordinate in pixels",
          "type": "integer"
        },
        "y": {
          "description": "y coordinate in pixels",
          "type": "integer"
        }
      }
    },
    "Terrain": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of terrain",
          "type": "string"
        },
        "tile": {
          "description": "Local ID of tile representing terrain",
          "type": "integer"
        }
      }
    },
    "Tiles": {
      "type": "object",
      "properties": {
        "terrain": {
          "description": "index of terrain for each corner of tile",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    },
    "Tileset": {
      "type": "object",
      "properties": {
        "firstgid": {
          "description": "GID corresponding to the first tile in the set",
          "type": "integer"
        },
        "image": {
          "description": "Image used for tiles in this set",
          "type": "string"
        },
        "imageheight": {
          "description": "Height of source image in pixels",
          "type": "integer"
        },
        "imagewidth": {
          "description": "Width of source image in pixels",
          "type": "integer"
        },
        "margin": {
          "description": "Buffer between image edge and first tile (pixels)",
          "type": "integer"
        },
        "name": {
          "description": "Name given to this tileset",
          "type": "string"
        },
        "properties": {
          "description": "String key-value pairs",
          "type": "object"
        },
        "spacing": {
          "description": "Spacing between adjacent tiles in image (pixels)",
          "type": "integer"
        },
        "terrains": {
          "description": "Array of Terrains (optional)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tileset"
          }
        },
        "tileheight": {
          "description": "Maximum height of tiles in this set",
          "type": "integer"
        },
        "tileproperties": {
          "description": "Per-tile properties, indexed by gid as string",
          "type": "object"
        },
        "tiles": {
          "description": "Gid-indexed Tiles (optional)",
          "type": "object"
        },
        "tilewidth": {
          "description": "Maximum width of tiles in this set",
          "type": "integer"
        }
      }
    }
  }
}`))
}
